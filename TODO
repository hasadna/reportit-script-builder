TODO: https://etherpad.net/p/VBvsA8XsHT

Next steps:
1. Add text-input-block
2. Add date-block
3. [History] Add storage locations
   - Create DB structure and functions to work with it
4. [History] Show list of waypoints
5. [History] Show waypoint preview
   - Choose between json or read-only preview
6. [History] Add restore, delete buttons

Blocks:
text-block [DONE]
Param: chatbot text

text-input-block
Param: ID for storing person input
Chatbot displays a textarea (we don't)
Validation: text_min_length, text_max_length
Example 1:
ID: [person_name]
text_max_length: 500

Example json:
text-input-block {
  id: person_name,
  validations {
    text_max_length: 500
  }
}

Example 2:
ID: [case_description]
text_min_length: 100
text_max_length: 2000

Example json:
text-input-block {
  id: case_description,
  validations {
    text_min_length: 100,
    text_max_length: 2000
  }
}

date-block
Param: ID for storing person input
Chatbot displays a datepicker (we don't)
Examples:
ID: [case_date]


Share a session of chatbot editor:
- Google doc single document style 
  - Storage locations:
    - Live data: stored all the time
    - List of history waypoints: stored every x minutes

  - History preview
    - No diff view (too much work)  
    - How is looks (options):
      - Read-only json view - diffable as text in another app
      - Read-only View of app - easier to read, more work
    - Delete waypoint
    - Restore waypoint

Validations:
- Create list of Validations
- Define which blocks can have each validation
- Allow the user to add validations to blocks

Valid phone number
Valid email
Valid date
Valid date before/after/between
Valid time
Valid non-empty response
Valid text length (min, max)



Ofer TODO:
- Check DB type (Firestore, other DB)














[ Text editor (typescript) | UI editor ]


For example:       //ifEmployment(this.getCompanyName())

Sketch of mechanism:
dropdown: [text-block, text-input-block, date-block]
[add button]

-------------------------------

Chat editor:

[text-block]
  [description]
  [block_id]
  [remove block button]

[text-input-block]
  [description]
  [block_id]
  [text_field_id]
  [validation dropdown][email]
  [remove block button]

[date-block]
  [description]
  [block_id]
  [date_field_id]
  [validation dropdown][greater than][greater or equal to]
    [greater than]
    [date_field, e.g 1-1-2019]]
  [remove block button]




[greetUser] [remove button]
[greetUser] [remove button]
[reportCase] [remove button]
[ifReportCase], dropdown: [*Police*, Employment...]
  dropdown: [greetUser, reportCase, caseDate, companyName, ifStatement]
  [add button]
  [greetUser] [remove button]


this.greetUser();
this.greetUser();
this.getReportCase();
ifReportCase(ReportCase.Police, [this.greetUser()]);


Problem: From code string to UI


    
    
    this.greetUser()
    this.getReportCase();
    this.getCaseDate();
    if (this.chatData.reportCase == ReportCase.Employment) {
      //ifEmployment(this.getCompanyName())
      this.getCompanyName();
    }
} 

this.getCaseDescription();

Draft:
- Save all the time with session ID
- Save with button for main storage
- Branch model with master - merge overrides.
- Cancel button - move from main storage to session
- New session starts when you open it
- Place to see sessions (if you didn't store the link you lose it)
- Another option: only 1 session (like Google Doc)
- Another option: Session is username
- Check: Do we need more than 1 session?
Nice to have: Problem: how to undo?
- Store change points at different times/triggers
- Alternative: Allow user to store dataList string.

app -> json -> git
json -/> app
